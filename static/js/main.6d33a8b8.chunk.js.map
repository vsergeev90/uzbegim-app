{"version":3,"sources":["assets/images/homepage/dessert-5.jpg","assets/images/homepage/bg_1.jpg","assets/images/homepage/restaurant.jpg","components/navbar/navbar.js","components/footer/footer.js","components/hero-banner/hero-banner.js","components/button-menu/button-menu.js","components/tiles/tiles.js","components/about/about.js","pages/home/home.js","components/map/map.js","pages/contact/contact.js","components/tabs/tabs.js","components/MenuList/menulist.js","pages/menu/menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","activeLink","link","window","location","pathname","Array","from","document","querySelectorAll","forEach","item","getAttribute","classList","add","remove","toggleMenu","dropdown","querySelector","burger","style","display","toggle","contains","setTimeout","this","className","href","type","onClick","Component","Footer","HeroBanner","bgImage","bannerText","bannerImage","backgroundImage","span","text","button","ButtonMenu","buttonText","buttonLink","Tiles","tiles","theme","tilesTitle","tilesMarkup","map","index","image","title","price","description","priceBlock","buttonBlock","key","tilesTitleMarkup","subhead","About","restImage","src","alt","Homepage","foodImage","tilesSpecialties","restaurantImage","Map","position","name","lat","lng","googleMapsApiKey","mapContainerStyle","height","width","zoom","center","Contact","Tabs","buttonName","buttonId","onTabchange","idName","id","MenuListRender","menu","submenu","useState","chosen","setChosen","e","arr","t","target","buttons","selected","find","element","push","tabRender","toString","menuRender","MenuList","Menu","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d33a8b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dessert-5.92ec4fe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg_1.78f6313e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant.d3cf8822.jpg\";","import React, { Component } from 'react'\r\nimport './navbar.scss'\r\n\r\nclass Navbar extends Component {\r\n  componentDidMount() {\r\n    this.activeLink()\r\n  }\r\n\r\n  activeLink = () => {\r\n    const link = window.location.pathname\r\n    const navigationItem = Array.from(\r\n      document.querySelectorAll(\".navbar .nav-link a\")\r\n    );\r\n\r\n    navigationItem.forEach((item) => {link === item.getAttribute(\"href\")\r\n      ? item.classList.add(\"is-active\")\r\n      : item.classList.remove(\"is-active\");})\r\n  }\r\n\r\n  toggleMenu = () => {\r\n        const dropdown = document.querySelector('.navbar-collapse');\r\n        const burger = document.querySelector('.navbar-burger');\r\n\r\n        \r\n        dropdown.style.display = \"block\"; \r\n        burger.classList.toggle('is-active');\r\n\r\n        if (burger.classList.contains(\"is-active\")) {\r\n          setTimeout(() => {\r\n            dropdown.classList.add(\"is-active\");\r\n          }, 0);\r\n        } else {\r\n          dropdown.classList.remove(\"is-active\");\r\n          setTimeout(() => {\r\n            dropdown.style.display = \"none\";\r\n          }, 300);\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <nav className=\"navbar\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-mobile\">\r\n              <p className=\"navbar-brand\">\r\n                <a href=\"/\">UZBEGIM</a>\r\n              </p>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                onClick={this.toggleMenu}\r\n              >\r\n                <div className=\"navbar-burger\">\r\n                  <div className=\"bar1\"></div>\r\n                  <div className=\"bar2\"></div>\r\n                  <div className=\"bar3\"></div>\r\n                </div>\r\n                <span>Menu</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"navbar-collapse\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <p className=\"nav-link\">\r\n                    <a href=\"/\">Home</a>\r\n                  </p>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <p className=\"nav-link\">\r\n                    <a href=\"/menu\">Menu</a>\r\n                  </p>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <p className=\"nav-link\">\r\n                    <a href=\"/contact\">Contact</a>\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      );\r\n    }\r\n};\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">Homepage</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/menu\">Menu</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/contact\">Contact</a>\r\n            </li>\r\n          </ul>\r\n          <p className=\"legal-notice\">Legal Notice</p>\r\n        </div>\r\n      </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport './hero-banner.scss'\r\n\r\nconst HeroBanner = ({bgImage,bannerText}) => {\r\n    const bannerImage = {\r\n      backgroundImage: `url(${bgImage})`,\r\n    };\r\n\r\n    return (\r\n      <div className=\"hero-banner\" style={bannerImage}>\r\n        <h1>\r\n          {bannerText.span ? (\r\n            <span className=\"subheading\">{bannerText.span}</span>\r\n          ) : null}{\" \"}\r\n          {bannerText.text ? bannerText.text : null}{\" \"}\r\n          {bannerText.button ? (\r\n            <button className=\"banner-button\">{bannerText.button}</button>\r\n          ) : null}\r\n        </h1>\r\n        <div className=\"overlay\"></div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default HeroBanner","import React from 'react'\r\nimport './button-menu.scss'\r\n\r\nconst ButtonMenu = ({buttonText, buttonLink}) => {\r\n  return (\r\n    <div className=\"button\">\r\n      <a href={buttonLink}>{buttonText}</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonMenu","import React from 'react';\r\n\r\nimport ButtonMenu from '../../components/button-menu/button-menu';\r\nimport './tiles.scss';\r\nconst Tiles = ({ tiles, theme, tilesTitle }) => {\r\n  let tilesMarkup = tiles.map((item, index) => {\r\n    let { image, title, price, description, button } = item;\r\n\r\n    let priceBlock = price ? <p>{price}</p> : null;\r\n\r\n    let buttonBlock = button ? <ButtonMenu buttonText={'Order'} buttonLink={'/contact'} /> : null;\r\n\r\n    return (\r\n      <div className=\"tile\" key={index}>\r\n        <div\r\n          className=\"tile-image\"\r\n          style={{ backgroundImage: `url(${image})` }}\r\n        ></div>\r\n        <div className=\"tile-text\">\r\n          <div>\r\n            <span className=\"tile-heading\">\r\n              <h3>{title}</h3>\r\n              {priceBlock}\r\n            </span>\r\n            <p>{description}</p>\r\n            {buttonBlock}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  let tilesTitleMarkup = tilesTitle ? (\r\n    <div className=\"tiles-title\">\r\n      <h2>\r\n        <span className=\"subheading\">{tilesTitle.subhead}</span>\r\n        {tilesTitle.title}\r\n      </h2>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <section className=\"tiles\">\r\n      {tilesTitleMarkup}\r\n      <div className={theme}>{tilesMarkup}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tiles;","import React from 'react'\r\nimport './about.scss'\r\n\r\nconst About = ({image}) => {\r\n  const restImage = `${image}`;\r\n    return (\r\n      <section>\r\n        <div className=\"container\">\r\n          <h2>\r\n            <span className=\"subheading\">About</span>About Us\r\n          </h2>\r\n          <div className=\"content-about\">\r\n            <img src={restImage} alt=\"restaurant interior\"></img>\r\n            <div>\r\n              <p>\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book. It has\r\n                survived not only five centuries, but also the leap into\r\n                electronic typesetting, remaining essentially unchanged. It was\r\n                popularised in the 1960s with the release of Letraset sheets\r\n                containing Lorem Ipsum passages, and more recently with desktop\r\n                publishing software like Aldus PageMaker including versions of\r\n                Lorem Ipsum.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default About","import React from 'react';\r\n\r\nimport HeroBanner from '../../components/hero-banner/hero-banner';\r\nimport Tiles from '../../components/tiles/tiles';\r\nimport bgImage from '../../assets/images/homepage/bg_1.jpg';\r\nimport restaurantImage from \"../../assets/images/homepage/restaurant.jpg\";\r\nimport foodImage from \"../../assets/images/homepage/dessert-5.jpg\";\r\nimport ButtonMenu from '../../components/button-menu/button-menu';\r\nimport About from '../../components/about/about';\r\n\r\nconst Homepage = () => {\r\n  const bannerText = {\r\n    span: \"UZBEGIM\",\r\n    text: \"delicious middle east cuisine\",\r\n    button: \"\",\r\n  };\r\n\r\n  //tiles on hero banner to not to break layout stick with 4 tiles with small description\r\n  const tiles = [\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\"\r\n    }\r\n  ];\r\n\r\n  const tilesSpecialties = [\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\",\r\n      price: \"150 KC\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\",\r\n      price: \"150 KC\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\",\r\n      price: \"150 KC\"\r\n    },\r\n    {\r\n      title: \"Food Name\",\r\n      image: foodImage,\r\n      description: \"some text which describes the food and how delicios it is\",\r\n      price: \"150 KC\"\r\n    }\r\n  ];\r\n\r\n  const tilesSpeacialtiesTitle = {\r\n    subhead: \"Specialties\",\r\n    title: \"Our menu\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"content home\">\r\n      <header>\r\n        <HeroBanner bgImage={bgImage} bannerText={bannerText} />\r\n      </header>\r\n      <Tiles tiles={tiles} tilesTitle=\"\" theme=\"theme-1\" />\r\n      <Tiles\r\n        tiles={tilesSpecialties}\r\n        tilesTitle={tilesSpeacialtiesTitle}\r\n        theme=\"theme-2\"\r\n      />\r\n      <ButtonMenu buttonText={'See Full Menu'} buttonLink={'/menu'}/>\r\n      <About image={restaurantImage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage","import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker\r\n} from \"@react-google-maps/api\";\r\n\r\nconst Map = () => {\r\n  const mapStyles = {\r\n    height: \"50vh\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const defaultCenter = {\r\n    lat: 50.0893161,\r\n    lng: 14.4625295,\r\n  };\r\n\r\n  const position = {\r\n    name: \"Uzbegim\",\r\n    location: {\r\n      lat: 50.0893161,\r\n      lng: 14.4625295,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyDrvWbnzo8Yf8FCtaCKvNzX5SPLHxDtIe0\">\r\n      <GoogleMap mapContainerStyle={mapStyles} zoom={18} center={defaultCenter}>\r\n        <Marker key={position.name} position={position.location} />\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport './contact.scss'\r\nimport Map from \"../../components/map/map\";\r\nimport HeroBanner from \"../../components/hero-banner/hero-banner\";\r\nimport bgImage from \"../../assets/images/homepage/bg_1.jpg\";\r\n\r\nconst Contact = () => {\r\n  const bannerText = {\r\n    span: \"\",\r\n    text: \"Contact Info\",\r\n    button: \"\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <HeroBanner bgImage={bgImage} bannerText={bannerText} />\r\n      </header>\r\n      <h1>Contact Info</h1>\r\n      <div className=\"container contact-info\">\r\n        <div>\r\n          <Map />\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <strong>Address</strong>: Konevova 945/75, 130 00, Praha 3 - Zizkov\r\n            <br />\r\n            <strong>Telephone</strong>: 702 869 389 <br />\r\n            If you would like to make an order please call, or check the bolt\r\n            <br />\r\n            app on you phone: two buttons with app links <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact","import React from \"react\";\r\nimport './tabs.scss';\r\n\r\n\r\nconst Tabs = ({ buttonName, buttonId, onTabchange }) => {\r\n  let idName = `${buttonId}-button`;\r\n  return (\r\n    <button onClick={onTabchange} id={idName}>\r\n      {buttonName}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Tabs;","import React, { useState } from \"react\";\r\n\r\nimport Tiles from \"../../components/tiles/tiles\";\r\nimport Tabs from \"../../components/tabs/tabs\";\r\nimport foodImage from \"../../assets/images/homepage/dessert-5.jpg\";\r\n\r\nlet MenuListRender = () => {\r\n  let menu = [\r\n    {\r\n      id: 'soups',\r\n      submenu: \"Polevky\",\r\n      tiles: [\r\n        {\r\n          title: \"Polevka 1\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Polevka 2\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Polevka 3\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Polevka 4\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'main',\r\n      submenu: \"Hlavni Jidla\",\r\n      tiles: [\r\n        {\r\n          title: \"Hlavni Jidlo 1\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Hlavni Jidlo 2\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Hlavni Jidlo 3\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Hlavni Jidlo 4\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n      ],\r\n    },\r\n\r\n    { \r\n      id: 'other',\r\n      submenu: \"Other\",\r\n      tiles: [\r\n        {\r\n          title: \"Other 1\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Other 2\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Other 3\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n        {\r\n          title: \"Other 4\",\r\n          image: foodImage,\r\n          description:\r\n            \"some text which describes the food and how delicios it is\",\r\n          button: true,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [chosen, setChosen] = useState(menu);\r\n\r\n  let onTabchange = (e) => {\r\n    let arr = []\r\n    let t = e.target.id;\r\n    let buttons = Array.from(document.querySelectorAll(\".tabs-wrapper button\"));\r\n    let selected = menu.find((element) => `${element.id}-button` === t);\r\n\r\n    buttons.forEach(element => (element.id === t)? (element.classList.add('is-active')):(element.classList.remove('is-active')));\r\n    arr.push(selected);\r\n\r\n    setChosen(arr);\r\n\r\n  };\r\n\r\n  let tabRender = menu.map((item, index) => <Tabs onTabchange={onTabchange} key={index.toString()} buttonName={item.submenu} buttonId={item.id} />);\r\n\r\n  let menuRender = chosen.map((item, index) => {\r\n    let { tiles, id } = item;\r\n\r\n    return (\r\n      <div>\r\n        <div key={index.toString()} id={id}>\r\n          <Tiles tiles={tiles} theme=\"theme-2\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tabs-wrapper\">\r\n        {tabRender}\r\n      </div>\r\n      {menuRender}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst MenuList = () => {\r\n  return <MenuListRender />;\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport MenuList from '../../components/MenuList/menulist';\r\nimport './menu.scss';\r\nimport HeroBanner from \"../../components/hero-banner/hero-banner\";\r\nimport bgImage from \"../../assets/images/homepage/bg_1.jpg\";\r\n\r\nconst Menu = () => {\r\n  const bannerText = {\r\n    span: \"\",\r\n    text: \"Menu\",\r\n    button: \"\",\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <HeroBanner bgImage={bgImage} bannerText={bannerText} />\r\n      </header>\r\n      <div className=\"container\">\r\n        <MenuList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from \"./components/footer/footer\";\nimport Homepage from \"./pages/home/home\";\nimport Contact from \"./pages/contact/contact\";\nimport Menu from \"./pages/menu/menu\";\nimport './App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Router>\n          <Switch>\n            <Route exact path=\"/uzbegim-app\" component={Homepage} />\n            <Route path=\"/uzbegim-app/menu\" component={Menu} />\n            <Route path=\"/uzbegim-app/contact\" component={Contact} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}